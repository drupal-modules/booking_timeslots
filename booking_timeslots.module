<?php

/**
 * @file
 *   Allows users to select an available calendar time slot to book.
 *
 * @version
 *   $Id$
 *
 * @developers
 *   Rafal Wieczorek <kenorb@gmail.com>
 */

/**
 * Implementation of hook_menu().
 *
 */
function booking_timeslots_menu() {
  $items['admin/settings/booking_timeslots'] = array(
    'title' => t('Booking Timeslots Settings'),
    'description' => t('Manage booking timeslots.'),
    'page callback' => 'drupal_get_form',
    'access callback' => 'booking_timeslots_access',
    'page arguments' => array('booking_timeslots_settings_timeslots_form'),
    'file' => 'booking_timeslots.admin.inc',
  );
  $items['admin/settings/booking_timeslots/timeslots_settings'] = array(
    'title' => t('Timeslot settings'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  ); 
  $items['admin/settings/booking_timeslots/form_settings'] = array(
    'title' => t('Form Settings'),
    'description' => t('Manage form settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('booking_timeslots_settings_form'),
    'access arguments' => array('administer booking timeslots'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'booking_timeslots.admin.inc',
  );

  return $items;
}


/**
 * Implementation of hook_perm().
 */
function booking_timeslots_perm() {
  $permissions = array(
    'administer booking timeslots',
    'edit booking dates',
    'show booking dates',
    'edit timeslot settings',
  );
  return $permissions;
}

/**
 * Menu item access callback - only admin or user with proper privileges can access it
 */
function booking_timeslots_access() {
  return user_access('administer booking timeslots') || user_access('edit timeslot settings');
}

/**
 * Implementation of hook_form_alter().
 */
function booking_timeslots_form_alter(&$form, $form_state, $form_id) {
  $enabled_forms = variable_get('booking_timeslot_forms', array()); // get content type used for booking timeslots
  foreach ($enabled_forms as $my_form_id => $value) {
    if ($form_id == $my_form_id . '_node_form') {
      module_load_include('inc', 'booking_timeslots');
      drupal_add_js(drupal_get_path('module', 'booking_timeslots') . '/booking_timeslots.js');
      if (!user_access('edit booking dates')) {
      drupal_add_js("
          $(document).ready(function() {
              $('.container-inline-date').parent().hide();
          })
      ", 'inline'); // hide input date form
      }
      $fieldnames = variable_get('booking_timeslot_fields', '');
      foreach ($fieldnames as $fieldname) {
        if (isset($form[$fieldname])) {
          $last_arg = booking_timeslots_get_last_path_arg(); // FIXME: any simpler way to get last arg?
          $datetime = $form[$fieldname][0]['#default_value']['value'];
          if (!empty($last_arg)) {
          if (booking_timeslots_valid_datetime($last_arg)) {
              $form[$fieldname][0]['#default_value']['value'] = $datetime = $last_arg;
            }
          }
          if (!empty($datetime)) {
            $date_after = booking_timeslots_add_time($datetime, array('hour' => variable_get('booking_timeslot_interval_hours', 1), 'minute' => variable_get('booking_timeslot_interval_minutes', 30)));
            $form[$fieldname][0]['#default_value']['value2'] = $date_after;
          }
          $form['#validate'] = array('booking_timeslots_validate');
        }
      }
    }
  }
}

/**
 * Validate callback.
 */
function booking_timeslots_validate($form, &$form_state) {
  module_load_include('inc', 'booking_timeslots');
  $fieldname = variable_get('booking_timeslot_field_name', '');
  $date1 = $form[$fieldname][0]['#value']['value']['date'];
  $time1 = $form[$fieldname][0]['#value']['value']['time'];
  $date2 = &$form[$fieldname][0]['#value']['value2']['date'];
  $time2 = &$form[$fieldname][0]['#value']['value2']['time'];
  //form_set_value($form[$fieldname][0]['#value']['value2'], array('date' => $date2, 'time' => $time1), $form_state); // set the same date of end event
  /* TODO */
}


