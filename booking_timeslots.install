<?php
/**
 * @file
 * Drupal installation file.
 */

/**
 * Implements hook_schema().
 */
function booking_timeslots_schema() {
  $schema['booking'] = array (
    'description' => 'The main store for our entity',
    'fields' => array(
      'pid' => array(
        'description' => 'Primary key for our table',
        'type'        => 'serial',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
      ),
      'cid' => array(
        'description' => 'ID of the {booking_slot_config} table record',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'uid' => array(
        'description' => 'ID of the user booking the slot',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'primary_id' => array(
        'description' => 'ID of the 1st content type id related with the booking',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'secondary_id' => array(
        'description' => 'ID of the 2nd content type id related with the booking',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'tertiary_id' => array(
        'description' => 'ID of the 3rd content type id related with the booking',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'quaternary_id' => array(
        'description' => 'ID of the 4th content type id related with the booking',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the booking was created.',
        'type'        => 'int',
        'not null'    => TRUE,
      ),
      'slot_time' => array(
        'description' => 'Slot date and time',
        'type'        => 'datetime:normal',
        'mysql_type'  => 'DATETIME',
        'not null'    => TRUE,
      ),
      'hour_start' => array(
        'description' => 'Starting hour',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'min_start' => array(
        'description' => 'Starting minute',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'duration' => array(
        'description' => 'Duration',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'players' => array(
        'description' => 'Number of players',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'total' => array(
        'description' => 'Total',
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0
      ),
      'deposit' => array(
        'description' => 'Deposit',
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0
      ),
      'tax' => array(
        'description' => 'Tax',
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0
      ),
      'notes' => array(
        'description' => 'Customer notes',
        'type' => 'varchar',
        'length' => 255,
        'default' => ''
      ),
    ),
    'primary key' => array('pid'),
    'indexes' => array(
      'index_cid' => array('cid'),
      'index_created' => array('created'),
    )
  );
  
  $schema['booking_slot_config'] = array (
    'description' => 'Configuration of booking slots per venue/facility',
    'fields' => array( // id, nid, day_of_week, hour_start, min_start, hour_end, min_end, price, slot_length, capacity, closed
      'cid' => array(
        'description' => 'Primary key',
        'type'        => 'serial',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
      ),
      'vid' => array(
        'description' => 'Venue ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'fid' => array(
        'description' => 'Facility ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'day_of_week' => array(
        'description' => 'Day of the week',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'hour_start' => array(
        'description' => 'Starting hour',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'min_start' => array(
        'description' => 'Starting minute',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'hour_end' => array(
        'description' => 'Ending hour',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'min_end' => array(
        'description' => 'Ending minute',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'price' => array(
        'description' => 'Price in JSON structure',
        'type' => 'varchar',
        'length' => 1024,
        'default' => '{}',
        'not null' => TRUE,
      ),            
      'duration' => array(
        'description' => 'Duration',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'capacity' => array(
        'description' => 'Capacity',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),            
      'closed' => array(
        'description' => "If set, bookings won't be allowed",
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
    ),
    'primary key' => array('cid'),
    'unique keys' => array(
        'unique_vid_fid' => array('vid', 'fid')
    ),
    'indexes' => array(
      'index_closed'  => array('closed'),
    ),
  );
  
  return $schema;
}

/**
  * Implementation of hook_install().
  */
function booking_timeslots_install() {
  $schema = drupal_get_schema('opening_hours');
  booking_timeslots_schema_alter($schema);

  db_add_field('opening_hours', 'capacity', $schema['opening_hours']['fields']['capacity']);
  db_add_field('opening_hours', 'slot_length', $schema['opening_hours']['fields']['slot_length']);
}

/**
  * Implementation of hook_uninstall().
  */
function booking_timeslots_uninstall() {
  $ret = array();
  $schema = drupal_get_schema('opening_hours');
  booking_timeslots_schema_alter($schema);
  db_drop_field('opening_hours', 'capacity');
  db_drop_field('opening_hours', 'slot_length');
}

/**
  * Implementation of hook_schema_alter().
  */
function booking_timeslots_schema_alter(&$schema) {
  $schema['opening_hours']['fields']['notice']['length'] = 4095;
  $schema['opening_hours']['fields']['capacity'] = array(
    'type' => 'int',
    'size' => 'small',
    'length' => 5,
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );
  $schema['opening_hours']['fields']['slot_length'] = array(
    'type' => 'int',
    'size' => 'small',
    'length' => 5,
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );
}

